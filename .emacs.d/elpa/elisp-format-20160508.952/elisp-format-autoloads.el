;;; elisp-format-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from elisp-format.el

(autoload 'elisp-format-region "elisp-format" "\
Format current region or buffer.
This function will format region from START to END.
Or try to format `defun' around point.

(fn &optional START END)" t)
(autoload 'elisp-format-buffer "elisp-format" "\
Format current buffer." t)
(autoload 'elisp-format-file "elisp-format" "\
Format file with FILENAME.

(fn FILENAME)" t)
(autoload 'elisp-format-file-batch "elisp-format" "\
Format elisp FILENAME.
But instead in `batch-mode'.
If SURPRESS-POPUP-WINDOW is non-nil, don't show output window.

(fn FILENAME &optional SURPRESS-POPUP-WINDOW)" t)
(autoload 'elisp-format-directory "elisp-format" "\
Format recursive elisp files under DIR.

(fn DIR)" t)
(autoload 'elisp-format-directory-batch "elisp-format" "\
Format recursive elisp files under DIR.
But instead in `batch-mode'.
If SURPRESS-POPUP-WINDOW is non-nil, don't show output window.

(fn DIR &optional SURPRESS-POPUP-WINDOW)" t)
(autoload 'elisp-format-dired-mark-files "elisp-format" "\
Format dired mark files." t)
(autoload 'elisp-format-library "elisp-format" "\
Format LIBRARY.

(fn LIBRARY)" t)
(register-definition-prefixes "elisp-format" '("elisp-format-"))

;;; End of scraped data

(provide 'elisp-format-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; elisp-format-autoloads.el ends here
